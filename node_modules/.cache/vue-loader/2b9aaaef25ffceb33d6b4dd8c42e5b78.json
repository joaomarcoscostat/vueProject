{"remainingRequest":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\src\\main\\Calculator.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\src\\main\\Calculator.vue","mtime":1575774098961},{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paulo Teixeira\\Documents\\DesenvolvedorJoaoMarcos\\vue\\calculator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQouY2FsY3VsYXRvcnsNCiAgICBoZWlnaHQ6MzIwcHg7DQogICAgd2lkdGg6IDIzNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIGRpc3BsYXk6IGdyaWQ7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNCwyNSUpOw0KICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDQ4cHggNDhweCA0OHB4IDQ4cHggNDhweDsNCn0NCg0K"},{"version":3,"sources":["Calculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Calculator.vue","sourceRoot":"src/main","sourcesContent":["<template>\r\n\r\n    <div class=\"calculator\">\r\n\r\n        <Display :value=\"displayValue\" />\r\n        <Button label=\"AC\" triple @onClick=\"clearMemory\"/>\r\n        <Button label=\"/\" operation @onClick=\"setOperation\"/>\r\n        <Button label=\"7\" @onClick=\"addDigit\"/>\r\n        <Button label=\"8\" @onClick=\"addDigit\"/>\r\n        <Button label=\"9\" @onClick=\"addDigit\"/>\r\n        <Button label=\"*\" operation @onClick=\"setOperation\"/>\r\n        <Button label=\"4\" @onClick=\"addDigit\"/>\r\n        <Button label=\"5\" @onClick=\"addDigit\"/>\r\n        <Button label=\"6\" @onClick=\"addDigit\"/>\r\n        <Button label=\"-\" operation @onClick=\"setOperation\"/>\r\n        <Button label=\"1\" @onClick=\"addDigit\"/>\r\n        <Button label=\"2\" @onClick=\"addDigit\"/>\r\n        <Button label=\"3\" @onClick=\"addDigit\"/>\r\n        <Button label=\"+\" operation @onClick=\"setOperation\"/>\r\n        <Button label=\"0\" double @onClick=\"addDigit\"/>\r\n        <Button label=\".\" @onClick=\"addDigit\"/>\r\n        <Button label=\"=\" operation @onClick=\"setOperation\"/>\r\n\r\n    </div>\r\n  \r\n</template>\r\n\r\n<script>\r\n\r\n    import Button from \"../components/Button\"\r\n    import Display from \"../components/Display\"\r\n    \r\n\r\n    export default {\r\n\r\n        data: function(){\r\n            return {\r\n                displayValue: \"5\",\r\n                clearDisplay:false,\r\n                operation:null,\r\n                values:[0],\r\n                current:0            \r\n                }\r\n        },\r\n        components: {Button, Display},\r\n\r\n         method: {\r\n\r\n            clearMemory(){\r\n\r\n                Object.assing(this.$data, this.$options.data())\r\n               \r\n            },\r\n\r\n            setOperation(){\r\n               \r\n            },\r\n\r\n            addDigit(n){\r\n\r\n                if(n === \".\" && this.displayValue.includes(\".\")){\r\n                    return\r\n                }\r\n\r\n                const clearDisplay = this.displayValue === \"0\"\r\n                 || this.clearDisplay\r\n                const currentValue = clearDisplay ? \"\" : this.displayValue\r\n                const displayValue = currentValue + n\r\n\r\n                this.displayValue = displayValue\r\n                this.clearDisplay = false\r\n\r\n                if(n !== \".\"){\r\n                    const i = this.current\r\n                    const newValue = parseFloat(displayValue)\r\n                    this.values[i] = newValue\r\n\r\n                }\r\n                \r\n            }\r\n\r\n        }\r\n\r\n       \r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.calculator{\r\n    height:320px;\r\n    width: 235px;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n    display: grid;\r\n    grid-template-columns: repeat(4,25%);\r\n    grid-template-rows: 1fr 48px 48px 48px 48px 48px;\r\n}\r\n\r\n</style>"]}]}